{
  "name": "Dashboard Data Aggregation Workflow",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "value": "0 */5 * * * *"
            }
          ]
        }
      },
      "name": "Dashboard Update Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  COUNT(*) as total_posts,\n  COUNT(CASE WHEN sentiment = 'positive' THEN 1 END) as positive_posts,\n  COUNT(CASE WHEN sentiment = 'negative' THEN 1 END) as negative_posts,\n  COUNT(CASE WHEN sentiment = 'neutral' THEN 1 END) as neutral_posts,\n  ROUND(AVG(sentiment_score), 2) as avg_sentiment_score\nFROM social_listening_data \nWHERE created_at >= NOW() - INTERVAL '24 hours';"
      },
      "name": "Get 24h Statistics",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        460,
        200
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  platform,\n  COUNT(*) as post_count,\n  AVG(sentiment_score) as avg_sentiment\nFROM social_listening_data \nWHERE created_at >= NOW() - INTERVAL '24 hours'\nGROUP BY platform\nORDER BY post_count DESC;"
      },
      "name": "Get Platform Breakdown",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  keyword,\n  COUNT(*) as mentions\nFROM social_listening_data\nCROSS JOIN LATERAL unnest(matched_keywords) as keyword\nWHERE created_at >= NOW() - INTERVAL '24 hours'\nGROUP BY keyword\nORDER BY mentions DESC\nLIMIT 10;"
      },
      "name": "Get Top Keywords",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        460,
        400
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  DATE_TRUNC('hour', created_at) as hour,\n  COUNT(*) as post_count,\n  AVG(sentiment_score) as avg_sentiment\nFROM social_listening_data \nWHERE created_at >= NOW() - INTERVAL '24 hours'\nGROUP BY DATE_TRUNC('hour', created_at)\nORDER BY hour;"
      },
      "name": "Get Hourly Trends",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        460,
        500
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  title,\n  platform,\n  sentiment,\n  sentiment_score,\n  url,\n  created_at\nFROM social_listening_data \nWHERE created_at >= NOW() - INTERVAL '24 hours'\nAND sentiment = 'negative'\nORDER BY sentiment_score ASC, created_at DESC\nLIMIT 5;"
      },
      "name": "Get Recent Negative Posts",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        460,
        600
      ]
    },
    {
      "parameters": {
        "functionCode": "// Combine all dashboard data\nconst dashboardData = {\n  timestamp: new Date().toISOString(),\n  overview: $('Get 24h Statistics').first().json,\n  platform_breakdown: $('Get Platform Breakdown').all().map(item => item.json),\n  top_keywords: $('Get Top Keywords').all().map(item => item.json),\n  hourly_trends: $('Get Hourly Trends').all().map(item => item.json),\n  recent_negative: $('Get Recent Negative Posts').all().map(item => item.json)\n};\n\n// Calculate additional metrics\nconst overview = dashboardData.overview;\nif (overview.total_posts > 0) {\n  dashboardData.overview.positive_percentage = Math.round((overview.positive_posts / overview.total_posts) * 100);\n  dashboardData.overview.negative_percentage = Math.round((overview.negative_posts / overview.total_posts) * 100);\n  dashboardData.overview.neutral_percentage = Math.round((overview.neutral_posts / overview.total_posts) * 100);\n}\n\n// Add trending indicators\ndashboardData.alerts = {\n  high_negative_sentiment: overview.negative_posts > 10,\n  low_activity: overview.total_posts < 5,\n  sentiment_spike: Math.abs(overview.avg_sentiment_score) > 2\n};\n\nreturn [dashboardData];"
      },
      "name": "Combine Dashboard Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        680,
        400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$env.DASHBOARD_WEBHOOK_URL}}",
        "options": {
          "headers": {
            "Content-Type": "application/json",
            "Authorization": "Bearer {{$env.DASHBOARD_API_KEY}}"
          }
        },
        "body": "={{JSON.stringify($json)}}"
      },
      "name": "Send to Dashboard",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        900,
        400
      ]
    },
    {
      "parameters": {
        "operation": "create",
        "table": "dashboard_snapshots",
        "columns": "data, created_at",
        "values": "={{JSON.stringify($json)}},={{new Date().toISOString()}}"
      },
      "name": "Save Dashboard Snapshot",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        900,
        500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.alerts.high_negative_sentiment}}",
              "value2": true
            }
          ]
        }
      },
      "name": "Check High Negative Sentiment",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        900,
        600
      ]
    },
    {
      "parameters": {
        "subject": "Alert: High Negative Sentiment Detected",
        "message": "High negative sentiment detected in social listening data:\n\nNegative Posts: {{$json.overview.negative_posts}}\nAverage Sentiment Score: {{$json.overview.avg_sentiment_score}}\nTime: {{$json.timestamp}}\n\nRecent negative posts:\n{{$json.recent_negative.map(post => `- ${post.title} (${post.platform}): ${post.sentiment_score}`).join('\\n')}}\n\nPlease review and take appropriate action.",
        "options": {}
      },
      "name": "Send High Negative Alert",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        1120,
        600
      ]
    }
  ],
  "connections": {
    "Dashboard Update Trigger": {
      "main": [
        [
          {
            "node": "Get 24h Statistics",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Platform Breakdown",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Top Keywords",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Hourly Trends",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Recent Negative Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get 24h Statistics": {
      "main": [
        [
          {
            "node": "Combine Dashboard Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Platform Breakdown": {
      "main": [
        [
          {
            "node": "Combine Dashboard Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Top Keywords": {
      "main": [
        [
          {
            "node": "Combine Dashboard Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Hourly Trends": {
      "main": [
        [
          {
            "node": "Combine Dashboard Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Recent Negative Posts": {
      "main": [
        [
          {
            "node": "Combine Dashboard Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine Dashboard Data": {
      "main": [
        [
          {
            "node": "Send to Dashboard",
            "type": "main",
            "index": 0
          },
          {
            "node": "Save Dashboard Snapshot",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check High Negative Sentiment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check High Negative Sentiment": {
      "main": [
        [
          {
            "node": "Send High Negative Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
